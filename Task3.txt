>>/usr/local/timescape/programs/tomcat9.0.30/webapps/timescape/WEB-INF/classes/config>>>>write ukgnotification(application name)
>>make ukgnotificationlogs >>>/var/timescapelogs/ukgnotificationlogs

empHeader.jsp>>>ukgNotificationController.jsp

viewData.jsp>>>

<%@ page language="java" %>
<%@ include file="../includes/sessionCheck.jsp" %>
<%@ page errorPage="../common/errorPage.jsp"%>
<%@ include file="../includes/empHeader.jsp" %>
<%@ page import="java.util.Hashtable, java.util.ArrayList, java.util.GregorianCalendar, java.util.Calendar" %>
<jsp:useBean id="ukgNotificationController" class="com.bccl.ukgnotification.web.controllerbeans.ukgnotificationWebController"/>
<jsp:useBean id="listDomainObjectsController" class="com.bccl.enterprise.web.controller.DomainObjectsWebController" />

<%
response.setHeader("Cache-Control","no-cache"); //HTTP 1.1
response.setHeader("Pragma","no-cache"); //HTTP 1.0
response.setDateHeader ("Expires", 0); //prevents caching at the proxy server
%>



<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Create Asset Request</title>
<link href="../style/global.css" rel="stylesheet" type="text/css" />
<link href="../style/calendarControl.css"rel="stylesheet">
<script src="../jscripts/calendarControl.js"language="javascript"></script>
<script src="../jscripts/common.js"language="javascript"></script>
<script src="../jscripts/util.js"language="javascript"></script>
<script src="../jscripts/jquery.js"language="javascript"></script>
<script src="../jscripts/addRows.js"language="javascript"></script>
<script src="../jscripts/createRequest.js"language="javascript"></script>
<style type="text/css">
body {
	margin-left: 0px;
	margin-top: 0px;
	margin-right: 0px;
	margin-bottom: 0px;
	background-image: url('../images/header_BG.jpg');
	background-repeat: repeat-x;
}
</style>
</head>


<body >
<form name="frmCreateRequest" method="post">
<%//@ include file="../includes/relatedLinks.jsp" %>
<table width="100%" border="0" cellpadding="0" cellspacing="0">


    <tr>
      <td colspan="100%" height="20px" bgcolor="#E7EAEF" class="budgetMenuBG">&nbsp;&nbsp;OUTWARD ASSET</td>
    </tr>
    
</table>
<%


Calendar cal = Calendar.getInstance();
int currentMonth = cal.get(Calendar.MONTH); 
int currentDate = cal.get(Calendar.DAY_OF_MONTH);


int payrollPeriod = 1;
int payrollYear = cal.get(Calendar.YEAR);

int payrollPeriodN = 1;
int payrollYearN = cal.get(Calendar.YEAR);

switch (currentMonth) {
    case Calendar.APRIL:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 1;
        } else if(currentDate >= 16 && currentDate <= 30){
            payrollPeriod = 2;
        }
        break;
    case Calendar.MAY:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 2;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 3;
        }
        break;
    case Calendar.JUNE:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 3;
        } else if(currentDate >= 16 && currentDate <= 30){
            payrollPeriod = 4;
        }
        break;
    case Calendar.JULY:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 4;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 5;
        }
        break;
    case Calendar.AUGUST:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 5;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 6;
        }
        break;
    case Calendar.SEPTEMBER:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 6;
        } else if(currentDate >= 16 && currentDate <= 30){
            payrollPeriod = 7;
        }
        break;
    case Calendar.OCTOBER:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 7;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 8;
        }
        break;
    case Calendar.NOVEMBER:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 8;
        } else if(currentDate >= 16 && currentDate <= 30){
            payrollPeriod = 9;
        }
        break;
    case Calendar.DECEMBER:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 9;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 10;
        }
        break;
    case Calendar.JANUARY:
        if(currentDate >= 1 && currentDate <= 15){
            payrollPeriod = 10;
            payrollYear--;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 11;
            payrollYear--;
        }
        break;
    case Calendar.FEBRUARY:
        if (currentDate >= 1 && currentDate <= 15) {
            payrollPeriod = 11;
            payrollYear--;
        } else if(currentDate >= 16 && currentDate <= 29){
            payrollPeriod = 12;
            payrollYear--;
        }
        break;
    case Calendar.MARCH:
        if (currentDate >= 1 && currentDate <= 15) {
            payrollPeriod = 12;
            payrollYear--;
        } else if(currentDate >= 16 && currentDate <= 31){
            payrollPeriod = 1;
        }
        break;
    default:
        payrollPeriod = 0;
        break;
}



// Calculate the previous payroll period and year
if (payrollPeriod == 1) {
    payrollPeriod = 12;
    payrollYear--;
} else {
    payrollPeriod--;
}

// Calculate the next payroll period and year
if (payrollPeriod == 12) {
    payrollPeriodN = 1;
    payrollYearN = payrollYear + 1;
} else {
    payrollPeriodN = payrollPeriod + 1;
    payrollYearN = payrollYear;
}


String payrollPeriodStr = String.valueOf(payrollPeriod);
String payrollYearStr = String.valueOf(payrollYear);

ArrayList ukgList = new ArrayList();
ukgList = ukgNotificationController.calculateAttendanceIndicatorCount(payrollPeriodStr, payrollYearStr, "1000", "NAVEENK3008");
out.println("Payroll Period: " + payrollPeriodStr);
out.println("Payroll Year: " + payrollYearStr);

out.println("<br><br>");
out.println("<table border='1' >");
out.println("<tr><th>Attendance Indicator</th><th>COUNT (Attendance Indicator)</th></tr>");

// Iterate over the ukgList and print each value
for (Object obj : ukgList) {
    if (obj instanceof String[]) {
        String[] array = (String[]) obj;
        out.println("<tr>");
        for (String element : array) {
            out.println("<td>" + element + "</td>");
        }
        out.println("</tr>");
    }
}

out.println("</table>");



String payrollPeriodStrN = String.valueOf(payrollPeriodN);
String payrollYearStrN = String.valueOf(payrollYearN);

ArrayList ukgListN = new ArrayList();
ukgListN = ukgNotificationController.calculateAttendanceIndicatorCount(payrollPeriodStrN, payrollYearStrN, "1000", "NAVEENK3008");
out.println("Payroll Period: " + payrollPeriodStrN);
out.println("Payroll Year: " + payrollYearStrN);

out.println("<br><br>");
out.println("<table border='1' >");
out.println("<tr><th>Attendance Indicator</th><th>COUNT (Attendance Indicator)</th></tr>");

// Iterate over the ukgList and print each value
for (Object obj : ukgListN) {
    if (obj instanceof String[]) {
        String[] array = (String[]) obj;
        out.println("<tr>");
        for (String element : array) {
            out.println("<td>" + element + "</td>");
        }
        out.println("</tr>");
    }
}

out.println("</table>");



%>
</form>
 </body>
</html>



>>>UKGNotification Development

/*
 * @(#)ukgnotification.java
 *
 * Copyright 2004 BCCL. All Rights Reserved.
 *
 * This software is the proprietary information of BCCL.
 * Use is subject to license terms.
 *
 */

package com.bccl.ukgnotification.domain;

import java.util.Hashtable;
import java.util.ArrayList;
import java.sql.Date;

import com.bccl.tsenvironment.Log;
import java.util.*;
import com.bccl.util.SQLUtility;
import com.bccl.util.Utility;


/**
 * @author		
 * @version		1.00 
 */

public class ukgnotification {
	
	SQLUtility sqlUtility;
    Utility utilityObj;

    String application = "ukgnotification";


 
	/*
     * Constructors
     */

    public ukgnotification() {
		sqlUtility = new SQLUtility(application);
		utilityObj = new Utility();
	}

	public ArrayList calculateAttendanceIndicatorCount(String payrollPeriod,String payrollYear,String companyCode,String createdBy)throws Exception
	{
		String getCalculatedAttendanceIndicatorCount= "";
		ArrayList result= null;
        try {

		getCalculatedAttendanceIndicatorCount = "SELECT a.attendanceindicator, COUNT(a.attendanceindicator) " +
                                                "FROM tkcsowner.knxpayrollmonthly a " +
                                                "WHERE payrollperiod = '" + payrollPeriod + "' " +
                                                "AND payrollyear = '" + payrollYear + "' " +
                                                "AND companycode = '" + companyCode + "' " +
                                                "AND createdby = '" + createdBy + "' " +
                                                "GROUP BY a.attendanceindicator " +
                                                "ORDER BY 1";

			result	= sqlUtility.executeQuery(getCalculatedAttendanceIndicatorCount,null);

        } finally {
            
			Log.printLog(application, "getCalculatedAttendanceIndicatorCount = " +getCalculatedAttendanceIndicatorCount, 1);
        }
        
        return result;
    }


	/**
        @Method Name 		: toString( )
        @Arguments			: Nil
        @Returns			: String
        @Comments			: This method is returns a String description of the object
    */
		public String toString () {

			return "UKGNotification -- Domain";
		}
}

>>>Controller

/*
 * Domain Controller
 * @(#)PolicyUserController.java
 *
 * Copyright 2004 BCCL. All Rights Reserved.
 *
 * This software is the proprietary information of BCCL.
 * Use is subject to license terms.
 *
 */

package com.bccl.ukgnotification.controller;

import java.util.Hashtable;
import java.util.ArrayList;
import java.sql.Date;

import com.bccl.tsenvironment.Log;
import java.util.*;
import com.bccl.util.SQLUtility;
import com.bccl.util.Utility;
import com.bccl.ukgnotification.domain.ukgnotification;

/**
 * Comments
 * @author  
 * @version 1.00, 
 */


public class ukgnotificationController {


    /*
     * Constructors
     */

    public ukgnotificationController() {

	}
	
	ukgnotification ukgnotificationObj=new ukgnotification();
	
	public ArrayList calculateAttendanceIndicatorCount(String payrollPeriod,String payrollYear,String companyCode,String createdBy)throws Exception{

        ArrayList result= ukgnotificationObj.calculateAttendanceIndicatorCount(payrollPeriod,payrollYear,companyCode,createdBy);
        
        return result;
    }
	
  
	/**
		@Method Name 	     : toString( )
		@Arguments		     : Nil
		@Returns		     : String
		@Comments		     : This method is returns a String description of the object
	*/
    public String toString () {

        return "UKGNotificationController -- Contoller.";
    }
}

>>>WebController

package com.bccl.ukgnotification.web.controllerbeans;

import java.util.Hashtable;
import java.util.ArrayList;
import java.sql.Date;

import com.bccl.tsenvironment.Log;
import java.util.*;
import com.bccl.util.SQLUtility;
import com.bccl.util.Utility;

import com.bccl.ukgnotification.controller;

/**
 * @author		
 * @version 	1.00,
 */

public class ukgnotificationWebController implements java.io.Serializable {

	/*
		* Constructors
	*/

	public ukgnotificationWebController( ) {

	}
	
	ukgnotificationController ukgNotificationControlllerObj=new ukgnotificationController();
	
	/**
    @Method Name 					:  calculateAttendanceIndicatorCount()
    @Arguments						:  
    @Returns						:  ArrayList result  
    @Comments						: this method returns calculated attendence count
    */

    public ArrayList calculateAttendanceIndicatorCount(String payrollPeriod,String payrollYear,String companyCode,String createdBy){

        ArrayList result= ukgNotificationControlllerObj.calculateAttendanceIndicatorCount(payrollPeriod,payrollYear,companyCode,createdBy);
        
        return result;
    }


   /**  
     * Used to print the String representation of this object.
     *
     */
    public String toString ()
	{

        return "UKGNotificationWebController -- Web Contoller.";
    }

}//end of class

Build .jar and .war

>>>Jar

dmtntimscape1p:~ # cd /usr/local/timescape/projects/timescape/dev/src/ukgnotification
dmtntimscape1p:/usr/local/timescape/projects/timescape/dev/src/ukgnotification # ant
Buildfile: /usr/local/timescape/projects/timescape/dev/src/ukgnotification/build.xml

init:
     [echo]  Building Timescape ukgnotification Package
     [echo]  Started at  on March 5 2024 - 1214 ......
     [echo]
     [echo]  Java Runtime Version : 1.8.0_192

compile:
     [echo]
     [echo]  Compiling Timescape ukgnotification Package
     [echo]
    [javac] /usr/local/timescape/projects/timescape/dev/src/ukgnotification/build.xml:54: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 1 source file to /usr/local/timescape/projects/timescape/dev/build/ukgnotification
     [echo]
     [echo]  Finished compiling Timescape ukgnotification Package
     [echo]

package:
     [echo]
     [echo]  Packaging Timescape ukgnotification Package
     [echo]
      [jar] Building jar: /usr/local/timescape/projects/timescape/dev/modules/ukgnotification.jar
     [echo]
     [echo]  Finished packaging Timescape ukgnotification Package
     [echo]

BUILD SUCCESSFUL
Total time: 0 seconds



>>>war

dmtntimscape1p:/usr/local/timescape/projects/timescape/dev/src/webapp # ant
Buildfile: /usr/local/timescape/projects/timescape/dev/src/webapp/build.xml

init:
     [echo]  Building Timescape Web Application Package
     [echo]  Started at  on March 5 2024 - 1221 ......
     [echo]
     [echo]  Java Runtime Version : ${java.fullversion}

compile:
     [echo]
     [echo]  Compiling Timescape Web Application Package
     [echo]
    [javac] /usr/local/timescape/projects/timescape/dev/src/webapp/build.xml:61: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 7 source files to /usr/local/timescape/projects/timescape/dev/build/webapp
     [echo]
     [echo]  Finished compiling Timescape Web Application Package
     [echo]

package:
     [echo]
     [echo]  Packaging Timescape Web Application Package
     [echo]
      [war] Building war: /usr/local/timescape/projects/timescape/dev/modules/timescape.war
     [echo]
     [echo]  Finished packaging Timescape Web Application Package
     [echo]

BUILD SUCCESSFUL
Total time: 5 seconds
