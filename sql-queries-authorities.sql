CREATE DATABASE api_security_db;

USE api_security_db;

GRANT ALL ON api_security_db.* TO 'root'@'%';

CREATE TABLE USERS (
	USERNAME VARCHAR(128) PRIMARY KEY,
    PASSWORD VARCHAR(128) NOT NULL,
    ENABLED CHAR(1) NOT NULL CHECK (ENABLED IN ('Y','N')) 
);

INSERT INTO `api_security_db`.`users`
(`USERNAME`,
`PASSWORD`,
`ENABLED`)
VALUES
("user1",
"$2y$12$4bavRcFDK8vjIUweLwetZuxnsBGcQqETtoX866/Ztli9Xjsc8PHbm",
'Y');

INSERT INTO `api_security_db`.`users`
(`USERNAME`,
`PASSWORD`,
`ENABLED`)
VALUES
("admin",
"$2y$12$4bavRcFDK8vjIUweLwetZuxnsBGcQqETtoX866/Ztli9Xjsc8PHbm",
'Y');

-- CREATE TABLE AUTHORITIES (
-- 	AUTHORITY_ID INT PRIMARY KEY,	
--     USERNAME VARCHAR(128) NOT NULL,
--     AUTHORITY VARCHAR(128) NOT NULL
-- );

ALTER TABLE AUTHORITIES ADD CONSTRAINT USER_ROLE_UNIQUE UNIQUE (USERNAME, AUTHORITY);
ALTER TABLE AUTHORITIES ADD CONSTRAINT USER_ROLE_FK1 FOREIGN KEY (USERNAME) REFERENCES USERS (USERNAME);

INSERT INTO `api_security_db`.`AUTHORITIES`(`AUTHORITY_ID`,`USERNAME`,`AUTHORITY`)
VALUES (1, "admin", "ADMIN");

INSERT INTO `api_security_db`.`AUTHORITIES` (`AUTHORITY_ID`,`USERNAME`,`AUTHORITY`)
VALUES (2, "user1", "USER");

CREATE TABLE ROLES (
    ROLE VARCHAR(128) NOT NULL PRIMARY KEY
);

CREATE TABLE USER_ROLE (
	USER_ROLE_ID INT PRIMARY KEY,	
    USERNAME VARCHAR(128) NOT NULL,
    ROLE VARCHAR(128) NOT NULL
);

ALTER TABLE USER_ROLE ADD CONSTRAINT USER_ROLE_UNIQUE UNIQUE (USERNAME, ROLE);
ALTER TABLE USER_ROLE ADD CONSTRAINT USER_ROLE_FK1 FOREIGN KEY (USERNAME) REFERENCES USERS (USERNAME);
ALTER TABLE USER_ROLE ADD CONSTRAINT USER_ROLE_FK2 FOREIGN KEY (ROLE) REFERENCES ROLES (ROLE);

CREATE TABLE AUTHORITIES (
	AUTHORITY_ID INT PRIMARY KEY,
    ROLE VARCHAR(128) NOT NULL,
    AUTHORITY VARCHAR(128) NOT NULL
);

ALTER TABLE AUTHORITIES ADD CONSTRAINT AUTHORITIES_UNIQUE UNIQUE (ROLE, AUTHORITY);
ALTER TABLE AUTHORITIES ADD CONSTRAINT AUTHORITIES_FK1 FOREIGN KEY (ROLE) REFERENCES ROLES (ROLE);

INSERT INTO `api_security_db`.`roles` (`ROLE`)
VALUES ("ROLE_ADMIN");

INSERT INTO `api_security_db`.`roles` (`ROLE`)
VALUES ("ROLE_USER");

INSERT INTO `api_security_db`.`USER_ROLE` (`USER_ROLE_ID`,`USERNAME`,`ROLE`)
VALUES (1, "admin", "ROLE_ADMIN");

INSERT INTO `api_security_db`.`USER_ROLE` (`USER_ROLE_ID`,`USERNAME`,`ROLE`)
VALUES (2, "user1", "ROLE_USER");

-- INSERT INTO `api_security_db`.`AUTHORITIES` (`AUTHORITY_ID`,`ROLE`,`AUTHORITY`)
-- VALUES (1, "ROLE_ADMIN", "ADD_BOOK");

INSERT INTO `api_security_db`.`AUTHORITIES` (`AUTHORITY_ID`,`ROLE`,`AUTHORITY`)
VALUES (2, "ROLE_ADMIN", "CREATE_BOOK");

INSERT INTO `api_security_db`.`AUTHORITIES` (`AUTHORITY_ID`,`ROLE`,`AUTHORITY`)
VALUES(3,"ROLE_USER","GET_BOOK");